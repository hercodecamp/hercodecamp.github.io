{"version":3,"file":"662d9d67db061e5c7fffd5e995bc3c5051d403b7-b3e9f37e1256d234cf6b.js","mappings":"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IACzC,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IACxD,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IACxD,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IACxD,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IAAK,IAAU,IACvE,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IAAK,IAAU,IACvE,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IACxD,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IACxD,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IACxD,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IAAK,IAAU,IACvE,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IAAK,IAAU,IACvE,IAAU,IAAM,IAAU,IAC1B,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IAAK,IAAU,IACvE,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IAAK,IAAU,IACvE,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IACxD,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IACxD,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IACxD,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IACxD,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IAAK,IAAU,IAAK,IAAU,IACtF,IAAU,IAAM,IAAU,IAAK,IAAU,IAAK,IAAU,IAAK,IAAU,IAAK,IAAU,IACtF,IAAU,IAAM,IAAU,IAC1B,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU,IAAM,IAAU,IAAK,IAAU,IACzC,IAAU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","sources":["webpack://hercodecamp.com/./src/assets/projects-pong.gif","webpack://hercodecamp.com/./src/assets/projects-spaceinvaders.gif","webpack://hercodecamp.com/./src/assets/projects-spongebob-food-rush.gif","webpack://hercodecamp.com/./src/components/CamperSlideshow.tsx","webpack://hercodecamp.com/./src/components/LinkButton.tsx","webpack://hercodecamp.com/./src/pages/index.tsx","webpack://hercodecamp.com/./src/assets/projects-colorchanging-pong.gif","webpack://hercodecamp.com/./node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/locale/en-US/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/_lib/toInteger/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/_lib/requiredArgs/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/toDate/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/addMilliseconds/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/subMilliseconds/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/_lib/assign/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/_lib/format/longFormatters/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/_lib/protectedTokens/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/_lib/setUTCDay/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/_lib/getUTCWeek/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/parse/_lib/parsers/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/_lib/setUTCWeek/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/_lib/setUTCISODay/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/parse/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/isDate/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/isValid/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/_lib/format/formatters/index.js","webpack://hercodecamp.com/./node_modules/date-fns/esm/format/index.js","webpack://hercodecamp.com/./src/pages/programs.tsx","webpack://hercodecamp.com/./node_modules/lodash/_Symbol.js","webpack://hercodecamp.com/./node_modules/lodash/_arrayMap.js","webpack://hercodecamp.com/./node_modules/lodash/_arrayReduce.js","webpack://hercodecamp.com/./node_modules/lodash/_asciiWords.js","webpack://hercodecamp.com/./node_modules/lodash/_baseGetTag.js","webpack://hercodecamp.com/./node_modules/lodash/_basePropertyOf.js","webpack://hercodecamp.com/./node_modules/lodash/_baseToString.js","webpack://hercodecamp.com/./node_modules/lodash/_createCompounder.js","webpack://hercodecamp.com/./node_modules/lodash/_deburrLetter.js","webpack://hercodecamp.com/./node_modules/lodash/_freeGlobal.js","webpack://hercodecamp.com/./node_modules/lodash/_getRawTag.js","webpack://hercodecamp.com/./node_modules/lodash/_hasUnicodeWord.js","webpack://hercodecamp.com/./node_modules/lodash/_objectToString.js","webpack://hercodecamp.com/./node_modules/lodash/_root.js","webpack://hercodecamp.com/./node_modules/lodash/_unicodeWords.js","webpack://hercodecamp.com/./node_modules/lodash/deburr.js","webpack://hercodecamp.com/./node_modules/lodash/isArray.js","webpack://hercodecamp.com/./node_modules/lodash/isObjectLike.js","webpack://hercodecamp.com/./node_modules/lodash/isSymbol.js","webpack://hercodecamp.com/./node_modules/lodash/kebabCase.js","webpack://hercodecamp.com/./node_modules/lodash/toString.js","webpack://hercodecamp.com/./node_modules/lodash/words.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/projects-pong-598625af35be5279b57cba334aa8c663.gif\";","export default __webpack_public_path__ + \"static/projects-spaceinvaders-951dba21e542ac4680f783e046a835ea.gif\";","export default __webpack_public_path__ + \"static/projects-spongebob-food-rush-f1d4144f462311c94b17d964c8d06bfd.gif\";","import React, { useState, useEffect } from \"react\"\n\nimport pongGif from \"../assets/projects-pong.gif\"\nimport spaceInvadersGif from \"../assets/projects-spaceinvaders.gif\"\nimport spongeBobGif from \"../assets/projects-spongebob-food-rush.gif\"\n\nconst CampersSlideshow: React.FunctionComponent<{\n  interval?: number\n}> = ({ children, interval = 7000 }) => {\n  const [currentSlide, setCurrentSlide] = useState(0)\n  const maxLength = Array.isArray(children) ? children.length : 1\n\n  useEffect(() => {\n    function update() {\n      setCurrentSlide(currentSlide => (currentSlide + 1) % maxLength)\n    }\n\n    const intervalId = setInterval(update, interval)\n\n    return () => clearInterval(intervalId)\n  }, [interval, maxLength])\n\n  if (!Array.isArray(children)) {\n    throw new Error(\"CamperSlideshow expects an array of children\")\n  }\n\n  return (\n    <>\n      <div className=\"w-full px-12 py-10 bg-gray-100 min-h-[300px]\">\n        {children[currentSlide]}\n      </div>\n      <div className=\"flex justify-center gap-2 mt-10\">\n        {children.map((_, i) => (\n          <span\n            key={i}\n            onClick={() => setCurrentSlide(i)}\n            className={`inline-block w-4 h-4 rounded-full cursor-pointer hover:bg-icterine ${\n              i === currentSlide ? \"bg-icterine\" : \"bg-gray-100\"\n            }`}\n          />\n        ))}\n      </div>\n    </>\n  )\n}\n\nconst CamperSlideshowSection: React.FunctionComponent = () => (\n  <section className=\"py-10 mx-auto md:py-32 max-w-7xl\">\n    <div className=\"max-w-5xl mx-auto\">\n      <h2 className=\"mb-8 text-4xl font-bold text-center uppercase md:text-left md:ml-12 text-iris\">\n        Projects by Campers\n      </h2>\n\n      <CampersSlideshow>\n        {[\n          {\n            gif: pongGif,\n            title: \"Ping Pong\",\n            event: \"Mentorship Program 2020\",\n            description: `Check out this project made by Leah M., Adriana M., and Robyn W.\n      mentored by Nicole S. and Yijang H. at our annual mentorship\n      program. They built a ping pong game and added a cool new rule.`,\n          },\n          {\n            gif: spongeBobGif,\n            title: \"Spongebob Food Rush\",\n            event: \"Mentorship Program 2021\",\n            description: `Check out this project made by Cathay Li & Maleeha Mirza mentored by Farzaneh at our annual mentorship program.`,\n          },\n          {\n            gif: spaceInvadersGif,\n            title: \"Space Invaders\",\n            event: \"Mentorship Program 2021\",\n            description: `Check out this project made by Rachel and Shahad, mentored by Raghav at our annual mentorship program. In their game, the goal is to hit as many aliens as you can before they reach you!`,\n          },\n        ].map(({ gif, title, event, description }) => (\n          <div className=\"flex justify-center\" key={title}>\n            <div className=\"grid-cols-8 gap-10 md:grid\">\n              <img\n                className=\"col-span-3 mb-8 shadow-icterine md:mb-0\"\n                src={gif}\n                alt=\"A gif of a pong game made by campers.\"\n              />\n              <div className=\"col-span-5 font-mono\">\n                <h4 className=\"text-2xl font-medium\">{title}</h4>\n                <span className=\"font-light uppercase \">{event}</span>\n                <p className=\"mt-6 font-light\">{description}</p>\n              </div>\n            </div>\n          </div>\n        ))}\n      </CampersSlideshow>\n    </div>\n  </section>\n)\n\nexport default CamperSlideshowSection\n","import React from \"react\"\n\nexport const IcterineLinkButton: React.FunctionComponent<{\n  className?: string\n}> = ({ children, className }) => {\n  return (\n    <span\n      className={`inline-block px-5 py-2 font-mono font-bold text-black uppercase cursor-pointer bg-icterine hover:bg-iris hover:text-white  ${\n        className || \"\"\n      }`}\n    >\n      {children}\n    </span>\n  )\n}\n\nexport const IrisLinkButton: React.FunctionComponent<{\n  className?: string\n}> = ({ children, className }) => {\n  return (\n    <span\n      className={`flex-wrap inline-block px-5 py-2 font-mono font-bold text-white uppercase border cursor-pointer border-iris bg-iris hover:bg-icterine hover:text-black ${\n        className || \"\"\n      }`}\n    >\n      {children}\n    </span>\n  )\n}\n\nexport const TransparentLinkButton: React.FunctionComponent<{\n  className?: string\n}> = ({ children, className }) => {\n  return (\n    <span\n      className={`inline-block px-5 py-2 font-mono font-bold uppercase border cursor-pointer bg-icterine border-icterine hover:bg-transparent hover:text-white ${\n        className || \"\"\n      }`}\n    >\n      {children}\n    </span>\n  )\n}\n","import React from \"react\"\nimport { graphql, Link, PageProps } from \"gatsby\"\nimport Layout, { Footer, Hero } from \"../components/layout\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport Helmet from \"react-helmet\"\n\nimport CamperSlideshowSection from \"../components/CamperSlideshow\"\nimport {\n  TransparentLinkButton,\n  IcterineLinkButton,\n} from \"../components/LinkButton\"\nimport { Program, UpcomingProgramsSection } from \"./programs\"\n\nconst IndexPage: React.FunctionComponent<PageProps> = ({ data }) => (\n  <Layout>\n    {/* Might need a minimum height. */}\n    <Helmet title=\"HER CODE CAMP\" />\n    <Hero>\n      <h1 className=\"mb-2 text-5xl font-bold text-white uppercase md:text-7xl\">\n        Ready to hack the future?\n      </h1>\n      <p className=\"mb-4 text-xl text-white font-extralight font-body\">\n        Join a <span className=\"underline\">free</span> computer science\n        community for high school women and non-binary students in Canada.\n      </p>\n      <div>\n        <div className=\"grid grid-cols-1 gap-2 md:block\">\n          <Link className=\"mr-2\" to=\"/programs\">\n            <TransparentLinkButton>Learn Now</TransparentLinkButton>\n          </Link>\n          <Link to=\"/get-involved\">\n            <TransparentLinkButton>Get Involved</TransparentLinkButton>\n          </Link>\n        </div>\n      </div>\n    </Hero>\n    <section id=\"first-section\">\n      <div className=\"content-center grid-cols-2 gap-20 px-8 py-10 mx-auto max-w-7xl md:px-14 md:py-40 md:grid\">\n        <div className=\"mb-6 md:mb-0\">\n          <StaticImage\n            className=\"shadow-icterine\"\n            src=\"../assets/participant-volunteer-smiling.jpg\"\n            alt=\"A camp participant and volunteer smiling while working through a problem together.\"\n          />\n        </div>\n        <div className=\"flex flex-col items-start justify-center\">\n          <h2 className=\"mb-2 font-mono text-3xl font-bold\">\n            print(\"HELLO WORLD\")\n          </h2>\n          <p className=\"mb-4 text-xl font-light font-body\">\n            HER CODE CAMP is a non-profit organization that empowers\n            under-represented communities in technology. We host free programs\n            specifically targeted to high school students who identify as a\n            woman, trans, and/or non-binary.\n          </p>\n          <Link to=\"/about\">\n            <IcterineLinkButton>Learn More</IcterineLinkButton>\n          </Link>\n        </div>\n      </div>\n    </section>\n    <section className=\"py-20 bg-icterine md:py-40\">\n      <div className=\"grid grid-cols-1 gap-16 px-20 mx-auto max-w-7xl md:grid-cols-3 md:gap-28 \">\n        <div className=\"text-center\">\n          <p className=\"mb-8 text-6xl\">💻</p>\n          {/* <StaticImage alt=\"Emoji style image of a laptop.\" /> */}\n          <h3 className=\"mb-4 text-xl font-bold uppercase\">Workshops</h3>\n          <p className=\"text-xl font-light font-body\">\n            We teach code and show the possibilities of technology.\n          </p>\n        </div>\n        <div className=\"text-center\">\n          <p className=\"mb-8 text-6xl\">👭</p>\n          {/* <StaticImage alt=\"Emoji style image of two people holding hands.\" /> */}\n          <h3 className=\"mb-4 text-xl font-bold uppercase\">Mentorship</h3>\n          <p className=\"text-xl font-light font-body\">\n            We help build cool projects alongside experts.\n          </p>\n        </div>\n        <div className=\"text-center\">\n          <p className=\"mb-8 text-6xl\">💖</p>\n          {/* <StaticImage alt=\"Emoji style image of a heart.\" /> */}\n          <h3 className=\"mb-4 text-xl font-bold uppercase\">Community</h3>\n          {/* NOTE: I changed anybody to everybody. */}\n          <p className=\"text-xl font-light font-body\">\n            We create a space where everybody is welcome to learn.\n          </p>\n        </div>\n      </div>\n    </section>\n    <section className=\"px-6 bg-gray-800 md:px-12\">\n      <div className=\"grid items-center grid-cols-1 gap-16 py-32 mx-auto md:grid-cols-3 max-w-7xl md:gap-12\">\n        {[\n          {\n            testimonial: `My daughter had an excellent experience at HER CODE CAMP. The\n            content was very informative and staff was supportive and\n            knowledgeable.`,\n            name: \"Kathryn Katsiroumpas\",\n            title: \"Parent, Engineer\",\n          },\n          {\n            testimonial: `The gender gap I observe in my classroom is reflected within the technology sector, which is why I encouraged all my students who identify as female, transgender, or non-binary to participate in HER CODE CAMP.\n          `,\n            name: \"Nathan Eusebio\",\n            title:\n              \"Math and Computer Science Teacher, Jarvis Collegiate Institute\",\n          },\n          {\n            testimonial: `The camp inspired me to further explore python through projects of my own, including an interactive calculator and a snake game.`,\n            name: \"Diksha\",\n            title: \"HCC Alumni 2021\",\n          },\n        ].map(({ testimonial, name, title }) => (\n          <div key={name}>\n            <span className=\"ml-[-11px] font-body italic font-black text-icterine text-9xl align-bottom select-none\">\n              “\n            </span>\n            <p className=\"sm:mt[-30px] mt-[-20px] font-mono font-extralight text-white text-lg mb-4\">\n              {testimonial}\n            </p>\n            <span className=\"px-1 font-mono text-gray-800 bg-white decoration-clone text-md\">\n              {name}\n            </span>\n            <br />\n            <span className=\"px-1 font-mono font-light text-gray-800 bg-white decoration-clone\">\n              {title}\n            </span>\n          </div>\n        ))}\n      </div>\n    </section>\n    <UpcomingProgramsSection\n      //@ts-ignore\n      withMore\n      programs={\n        (data as { allMarkdownRemark: { nodes: Array<Program> } })\n          .allMarkdownRemark.nodes\n      }\n    />\n\n    <section>\n      <div className=\"mx-auto \">\n        <StaticImage\n          src=\"../assets/all-participants.jpg\"\n          alt=\"Group photo of HER CODE CAMP participants and volunteers.\"\n        />\n      </div>\n    </section>\n    <CamperSlideshowSection />\n    <section className=\"bg-icterine\">\n      <div className=\"max-w-5xl px-8 py-24 mx-auto md:px-12\">\n        <div className=\"grid grid-cols-1 gap-8 md:grid-cols-2 md:gap-20\">\n          <div className=\"flex flex-col px-10 pt-20 pb-12 text-center bg-white rounded shadow-xl\">\n            {/* <StaticImage alt=\"Emoji style image of woman using computer.\" /> */}\n            <p className=\"mb-8 text-9xl\">👩🏽‍💻</p>\n            <h3 className=\"mb-4 text-xl font-bold uppercase\">Learn</h3>\n            <p className=\"mb-8 text-xl font-light font-body\">\n              Register for an upcoming program or start learning today at zero\n              cost.\n            </p>\n            <Link className=\"mt-auto\" to=\"/programs\">\n              <IcterineLinkButton>Register</IcterineLinkButton>\n            </Link>\n          </div>\n          <div className=\"flex flex-col px-10 pt-20 pb-12 text-center bg-white rounded shadow-lg font-body\">\n            {/* <StaticImage alt=\"Emoji style image of woman using computer.\" /> */}\n            <p className=\"mb-8 text-9xl\">🤗</p>\n            <h3 className=\"mb-4 text-xl font-bold uppercase font-body\">\n              Contribute\n            </h3>\n            <p className=\"mb-8 text-xl font-light font-body\">\n              Join the team as a volunteer, staff, partner, or advisor.\n            </p>\n            <Link className=\"mt-auto\" to=\"/get-involved\">\n              <IcterineLinkButton>Get Involved</IcterineLinkButton>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </section>\n    <MailingListSection />\n    <Footer />\n  </Layout>\n)\n\nexport const MailingListSection: React.FunctionComponent = () => (\n  <section className=\"h-[700px] flex justify-center items-center bg-radial-gradient-br from-icterine to-iris\">\n    <div className=\"px-4 text-gray-200 md:w-2/5 md:bg-opacity-40 md:bg-white md:rounded-lg md:px-16 md:py-20 md:text-black\">\n      <div className=\"text-center my-30\">\n        <h2 className=\"mb-3 font-mono text-3xl font-bold\">Stay in the loop!</h2>\n        <p className=\"mb-8 text-xl font-light font-body\">\n          Join our quarterly newsletter to keep up with news, volunteer\n          opportunities, and upcoming events.\n        </p>\n        <Link to=\"https://hercodecamp.us19.list-manage.com/subscribe?u=c27169d8995f9d493daf82c16&id=4169a6682f\">\n          <IcterineLinkButton> Subscribe</IcterineLinkButton>\n        </Link>\n      </div>\n    </div>\n  </section>\n)\n\nexport const pageQuery = graphql`\n  query IndexPage {\n    allMarkdownRemark {\n      nodes {\n        frontmatter {\n          title\n          tags\n          blurb\n          date(formatString: \"yyyy-MM-DD\")\n          slug\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n","export default __webpack_public_path__ + \"static/projects-colorchanging-pong-affa4ef8cf521bad5317e52d9e9980e0.gif\";","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\n\nvar formatDistance = function formatDistance(token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n\n  if (typeof tokenValue === 'string') {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace('{{count}}', count.toString());\n  }\n\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n};\n\nexport default formatDistance;","export default function buildFormatLongFn(args) {\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; // TODO: Remove String()\n\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\n\nvar formatRelative = function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n};\n\nexport default formatRelative;","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex; // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challange you to try to remove it!\n\n    return valuesArray[index];\n  };\n}","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']\n}; // Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\n\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nvar ordinalNumber = function ordinalNumber(dirtyNumber, _options) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n};\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function argumentCallback(quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","export default function buildMatchFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    }) : findKey(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    });\n    var value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}","import buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nimport buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function valueCallback(value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function valueCallback(index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","export default function buildMatchPatternFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (Object.prototype.hasOwnProperty.call(dirtyObject, property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport default function getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  }\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from \"../getUTCISOWeekYear/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport startOfUTCISOWeekYear from \"../startOfUTCISOWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toInteger from \"../toInteger/index.js\";\nimport getUTCWeekYear from \"../getUTCWeekYear/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport startOfUTCWeekYear from \"../startOfUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport setUTCDay from \"../../../_lib/setUTCDay/index.js\";\nimport setUTCISODay from \"../../../_lib/setUTCISODay/index.js\";\nimport setUTCISOWeek from \"../../../_lib/setUTCISOWeek/index.js\";\nimport setUTCWeek from \"../../../_lib/setUTCWeek/index.js\";\nimport startOfUTCISOWeek from \"../../../_lib/startOfUTCISOWeek/index.js\";\nimport startOfUTCWeek from \"../../../_lib/startOfUTCWeek/index.js\";\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_SECOND = 1000;\nvar numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/,\n  // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/,\n  // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/,\n  // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/,\n  // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/,\n  // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/,\n  // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  minute: /^[0-5]?\\d/,\n  // 0 to 59\n  second: /^[0-5]?\\d/,\n  // 0 to 59\n  singleDigit: /^\\d/,\n  // 0 to 9\n  twoDigits: /^\\d{1,2}/,\n  // 0 to 99\n  threeDigits: /^\\d{1,3}/,\n  // 0 to 999\n  fourDigits: /^\\d{1,4}/,\n  // 0 to 9999\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/,\n  // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/,\n  // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/,\n  // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n\n};\nvar timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};\n\nfunction parseNumericPattern(pattern, string, valueCallback) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  var value = parseInt(matchResult[0], 10);\n  return {\n    value: valueCallback ? valueCallback(value) : value,\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseTimezonePattern(pattern, string) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  } // Input is 'Z'\n\n\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: string.slice(1)\n    };\n  }\n\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseAnyDigitsSigned(string, valueCallback) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);\n}\n\nfunction parseNDigits(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction parseNDigitsSigned(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction dayPeriodEnumToHours(enumValue) {\n  switch (enumValue) {\n    case 'morning':\n      return 4;\n\n    case 'evening':\n      return 17;\n\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0; // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n\n\nvar parsers = {\n  // Era\n  G: {\n    priority: 140,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n        // A, B\n\n        case 'GGGGG':\n          return match.era(string, {\n            width: 'narrow'\n          });\n        // Anno Domini, Before Christ\n\n        case 'GGGG':\n        default:\n          return match.era(string, {\n            width: 'wide'\n          }) || match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n      }\n    },\n    set: function set(date, flags, value, _options) {\n      flags.era = value;\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['R', 'u', 't', 'T']\n  },\n  // Year\n  y: {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    priority: 130,\n    parse: function parse(string, token, match, _options) {\n      var valueCallback = function valueCallback(year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n\n      switch (token) {\n        case 'y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function set(date, flags, value, _options) {\n      var currentYear = date.getUTCFullYear();\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week-numbering year\n  Y: {\n    priority: 130,\n    parse: function parse(string, token, match, _options) {\n      var valueCallback = function valueCallback(year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n\n      switch (token) {\n        case 'Y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'Yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function set(date, flags, value, options) {\n      var currentYear = getUTCWeekYear(date, options);\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return startOfUTCWeek(date, options);\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week-numbering year\n  R: {\n    priority: 130,\n    parse: function parse(string, token, _match, _options) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function set(_date, _flags, value, _options) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return startOfUTCISOWeek(firstWeekOfYear);\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Extended year\n  u: {\n    priority: 130,\n    parse: function parse(string, token, _match, _options) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Quarter\n  Q: {\n    priority: 120,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'Qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'QQQ':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'QQQQQ':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'QQQQ':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone quarter\n  q: {\n    priority: 120,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'qqq':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'qqqqq':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'qqqq':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Month\n  M: {\n    priority: 110,\n    parse: function parse(string, token, match, _options) {\n      var valueCallback = function valueCallback(value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'MM':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Mo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'MMM':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // J, F, ..., D\n\n        case 'MMMMM':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // January, February, ..., December\n\n        case 'MMMM':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone month\n  L: {\n    priority: 110,\n    parse: function parse(string, token, match, _options) {\n      var valueCallback = function valueCallback(value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'LL':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Lo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'LLL':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // J, F, ..., D\n\n        case 'LLLLL':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // January, February, ..., December\n\n        case 'LLLL':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week of year\n  w: {\n    priority: 100,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'wo':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function set(date, _flags, value, options) {\n      return startOfUTCWeek(setUTCWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week of year\n  I: {\n    priority: 100,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'Io':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function set(date, _flags, value, options) {\n      return startOfUTCISOWeek(setUTCISOWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Day of the month\n  d: {\n    priority: 90,\n    subPriority: 1,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, string);\n\n        case 'do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      var month = date.getUTCMonth();\n\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of year\n  D: {\n    priority: 90,\n    subPriority: 1,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, string);\n\n        case 'Do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of week\n  E: {\n    priority: 90,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'EEEEE':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'EEEEEE':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'EEEE':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function set(date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local day of week\n  e: {\n    priority: 90,\n    parse: function parse(string, token, match, options) {\n      var valueCallback = function valueCallback(value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'eo':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'eee':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'eeeee':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'eeeeee':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'eeee':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function set(date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']\n  },\n  // Stand-alone local day of week\n  c: {\n    priority: 90,\n    parse: function parse(string, token, match, options) {\n      var valueCallback = function valueCallback(value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'co':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'ccc':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // T\n\n        case 'ccccc':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tu\n\n        case 'cccccc':\n          return match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tuesday\n\n        case 'cccc':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function set(date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']\n  },\n  // ISO day of week\n  i: {\n    priority: 90,\n    parse: function parse(string, token, match, _options) {\n      var valueCallback = function valueCallback(value) {\n        if (value === 0) {\n          return 7;\n        }\n\n        return value;\n      };\n\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii':\n          // 02\n          return parseNDigits(token.length, string);\n        // 2nd\n\n        case 'io':\n          return match.ordinalNumber(string, {\n            unit: 'day'\n          });\n        // Tue\n\n        case 'iii':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // T\n\n        case 'iiiii':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tu\n\n        case 'iiiiii':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tuesday\n\n        case 'iiii':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 1 && value <= 7;\n    },\n    set: function set(date, _flags, value, options) {\n      date = setUTCISODay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']\n  },\n  // AM or PM\n  a: {\n    priority: 80,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaaa':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaa':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['b', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // AM, PM, midnight\n  b: {\n    priority: 80,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbbb':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbb':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: {\n    priority: 80,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBBB':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBB':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 't', 'T']\n  },\n  // Hour [1-12]\n  h: {\n    priority: 70,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, string);\n\n        case 'ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 1 && value <= 12;\n    },\n    set: function set(date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['H', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-23]\n  H: {\n    priority: 70,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, string);\n\n        case 'Ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 23;\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-11]\n  K: {\n    priority: 70,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, string);\n\n        case 'Ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function set(date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'k', 't', 'T']\n  },\n  // Hour [1-24]\n  k: {\n    priority: 70,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, string);\n\n        case 'ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 1 && value <= 24;\n    },\n    set: function set(date, _flags, value, _options) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'K', 't', 'T']\n  },\n  // Minute\n  m: {\n    priority: 60,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, string);\n\n        case 'mo':\n          return match.ordinalNumber(string, {\n            unit: 'minute'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCMinutes(value, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Second\n  s: {\n    priority: 50,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, string);\n\n        case 'so':\n          return match.ordinalNumber(string, {\n            unit: 'second'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCSeconds(value, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Fraction of second\n  S: {\n    priority: 30,\n    parse: function parse(string, token, _match, _options) {\n      var valueCallback = function valueCallback(value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3));\n      };\n\n      return parseNDigits(token.length, string, valueCallback);\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCMilliseconds(value);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Timezone (ISO-8601. +00:00 is `'Z'`)\n  X: {\n    priority: 10,\n    parse: function parse(string, token, _match, _options) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function set(date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'x']\n  },\n  // Timezone (ISO-8601)\n  x: {\n    priority: 10,\n    parse: function parse(string, token, _match, _options) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function set(date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'X']\n  },\n  // Seconds timestamp\n  t: {\n    priority: 40,\n    parse: function parse(string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function set(_date, _flags, value, _options) {\n      return [new Date(value * 1000), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  },\n  // Milliseconds timestamp\n  T: {\n    priority: 20,\n    parse: function parse(string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function set(_date, _flags, value, _options) {\n      return [new Date(value), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  }\n};\nexport default parsers;","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport getUTCWeek from \"../getUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCWeek(dirtyDate, dirtyWeek, options) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getUTCWeek(date, options) - week;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport getUTCISOWeek from \"../getUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getUTCISOWeek(date) - isoWeek;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var day = toInteger(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport assign from \"../_lib/assign/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport parsers from \"./_lib/parsers/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar TIMEZONE_UNIT_PRIORITY = 10; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar notWhitespaceRegExp = /\\S/;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 0001, ..., 999               |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Old `parse` was renamed to `toDate`.\n *   Now `parse` is a new function which parses a string using a provided format.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward (toDate no longer accepts a string)\n *   toDate(1392098430000) // Unix to timestamp\n *   toDate(new Date(2014, 1, 11, 11, 30, 30)) // Cloning the date\n *   parse('2016-01-01', 'yyyy-MM-dd', new Date())\n *   ```\n *\n * @param {String} dateString - the string to parse\n * @param {String} formatString - the string of tokens\n * @param {Date|Number} referenceDate - defines values missing from the parsed dateString\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {Date} the parsed date\n * @throws {TypeError} 3 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\n\nexport default function parse(dirtyDateString, dirtyFormatString, dirtyReferenceDate, dirtyOptions) {\n  requiredArgs(3, arguments);\n  var dateString = String(dirtyDateString);\n  var formatString = String(dirtyFormatString);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.match) {\n    throw new RangeError('locale must contain match property');\n  }\n\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (formatString === '') {\n    if (dateString === '') {\n      return toDate(dirtyReferenceDate);\n    } else {\n      return new Date(NaN);\n    }\n  }\n\n  var subFnOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale\n  }; // If timezone isn't specified, it will be set to the system timezone\n\n  var setters = [{\n    priority: TIMEZONE_UNIT_PRIORITY,\n    subPriority: -1,\n    set: dateToSystemTimezone,\n    index: 0\n  }];\n  var i;\n  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, subFnOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp);\n  var usedTokens = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    var firstCharacter = token[0];\n    var parser = parsers[firstCharacter];\n\n    if (parser) {\n      var incompatibleTokens = parser.incompatibleTokens;\n\n      if (Array.isArray(incompatibleTokens)) {\n        var incompatibleToken = void 0;\n\n        for (var _i = 0; _i < usedTokens.length; _i++) {\n          var usedToken = usedTokens[_i].token;\n\n          if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {\n            incompatibleToken = usedTokens[_i];\n            break;\n          }\n        }\n\n        if (incompatibleToken) {\n          throw new RangeError(\"The format string mustn't contain `\".concat(incompatibleToken.fullToken, \"` and `\").concat(token, \"` at the same time\"));\n        }\n      } else if (parser.incompatibleTokens === '*' && usedTokens.length) {\n        throw new RangeError(\"The format string mustn't contain `\".concat(token, \"` and any other token at the same time\"));\n      }\n\n      usedTokens.push({\n        token: firstCharacter,\n        fullToken: token\n      });\n      var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);\n\n      if (!parseResult) {\n        return new Date(NaN);\n      }\n\n      setters.push({\n        priority: parser.priority,\n        subPriority: parser.subPriority || 0,\n        set: parser.set,\n        validate: parser.validate,\n        value: parseResult.value,\n        index: setters.length\n      });\n      dateString = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n      } // Replace two single quote characters with one single quote character\n\n\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      } // Cut token from string, or, if string doesn't match the token, return Invalid Date\n\n\n      if (dateString.indexOf(token) === 0) {\n        dateString = dateString.slice(token.length);\n      } else {\n        return new Date(NaN);\n      }\n    }\n  } // Check if the remaining input contains something other than whitespace\n\n\n  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {\n    return new Date(NaN);\n  }\n\n  var uniquePrioritySetters = setters.map(function (setter) {\n    return setter.priority;\n  }).sort(function (a, b) {\n    return b - a;\n  }).filter(function (priority, index, array) {\n    return array.indexOf(priority) === index;\n  }).map(function (priority) {\n    return setters.filter(function (setter) {\n      return setter.priority === priority;\n    }).sort(function (a, b) {\n      return b.subPriority - a.subPriority;\n    });\n  }).map(function (setterArray) {\n    return setterArray[0];\n  });\n  var date = toDate(dirtyReferenceDate);\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37\n\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var flags = {};\n\n  for (i = 0; i < uniquePrioritySetters.length; i++) {\n    var setter = uniquePrioritySetters[i];\n\n    if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) {\n      return new Date(NaN);\n    }\n\n    var result = setter.set(utcDate, flags, setter.value, subFnOptions); // Result is tuple (date, flags)\n\n    if (result[0]) {\n      utcDate = result[0];\n      assign(flags, result[1]); // Result is date\n    } else {\n      utcDate = result;\n    }\n  }\n\n  return utcDate;\n}\n\nfunction dateToSystemTimezone(date, flags) {\n  if (flags.timestampIsSet) {\n    return date;\n  }\n\n  var convertedDate = new Date(0);\n  convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n  convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  return convertedDate;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {*} value - the value to check\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\n\nexport default function isDate(value) {\n  requiredArgs(1, arguments);\n  return value instanceof Date || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}","import isDate from \"../isDate/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n\n  if (!isDate(dirtyDate) && typeof dirtyDate !== 'number') {\n    return false;\n  }\n\n  var date = toDate(dirtyDate);\n  return !isNaN(Number(date));\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from \"../../addLeadingZeros/index.js\";\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function M(date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function d(date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function a(date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaa':\n        return dayPeriodEnumValue;\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function H(date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function m(date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function s(date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import lightFormatters from \"../lightFormatters/index.js\";\nimport getUTCDayOfYear from \"../../../_lib/getUTCDayOfYear/index.js\";\nimport getUTCISOWeek from \"../../../_lib/getUTCISOWeek/index.js\";\nimport getUTCISOWeekYear from \"../../../_lib/getUTCISOWeekYear/index.js\";\nimport getUTCWeek from \"../../../_lib/getUTCWeek/index.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport addLeadingZeros from \"../../addLeadingZeros/index.js\";\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n};\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function G(date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function y(date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function Y(date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function R(date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function u(date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function Q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function M(date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function L(date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function w(date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function I(date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function d(date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function D(date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function E(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function e(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function c(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function i(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function a(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function b(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function B(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function H(date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function K(date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function k(date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function m(date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function s(date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function X(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function x(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function O(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function z(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function t(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function T(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","import isValid from \"../isValid/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport formatters from \"../_lib/format/formatters/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\"; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import React from \"react\"\nimport { graphql, Link, PageProps } from \"gatsby\"\nimport Layout, { Footer, Hero } from \"../components/layout\"\n\nimport Helmet from \"react-helmet\"\nimport CamperSlideshowSection from \"../components/CamperSlideshow\"\nimport colorChangingPongGif from \"../assets/projects-colorchanging-pong.gif\"\nimport { IrisLinkButton } from \"../components/LinkButton\"\nimport { MailingListSection } from \".\"\nimport { kebabCase } from \"lodash\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport { format, parse } from \"date-fns\"\n\nconst ProgramsPage: React.FunctionComponent<PageProps> = ({ data }) => {\n  return (\n    <Layout>\n      {/* Might need a minimum height. */}\n      <Helmet title=\"Programs – HER CODE CAMP\" />\n      <Hero>\n        <h1 className=\"mb-2 font-bold text-white uppercase text-7xl\">\n          Programs\n        </h1>\n        <p className=\"mb-4 text-xl text-white font-extralight font-body\">\n          This way for adventure!\n        </p>\n      </Hero>\n      <section className=\"px-8 py-10 md:py-32\">\n        <div className=\"max-w-5xl mx-auto\">\n          <div className=\"text-center\">\n            <h2 className=\"mb-4 text-4xl font-bold text-iris font-body\">\n              Our Programs\n            </h2>\n            <p className=\"mb-8 text-lg font-light font-body\">\n              Our programs are designed with beginners in mind, and we focus on\n              enabling campers to build projects that showcase their new skills.\n              Our goal is to show the possibilities of technology.\n            </p>\n          </div>\n          <div className=\"grid justify-center gap-4 sm:grid-cols-1 md:grid-cols-3\">\n            {[\n              {\n                icon: \"💻\",\n                title: \"Workshops\",\n                body: \"Learn basics of coding through live-coding sessions and videos\",\n              },\n              {\n                icon: \"👭\",\n                title: \"Mentorship Program\",\n                body: \"Work closely with experts to build a project\",\n              },\n              {\n                icon: \"🧩\",\n                title: \"Byte-sized Series\",\n                body: \"Short 1-2 hour workshops on skills to add to your toolbox\",\n              },\n            ].map(({ icon, title, body }) => (\n              <Link\n                className=\"h-full mb-3\"\n                to={`#${kebabCase(title.toLowerCase())}`}\n              >\n                <div className=\"h-full px-2 py-16 text-center bg-gray-200 rounded hover:bg-gray-300 hover:drop-shadow-xl hover:!text-black\">\n                  <div className=\"mb-3 text-5xl\">{icon}</div>\n                  <h3 className=\"mb-2 text-xl font-bold uppercase\">{title}</h3>\n                  <p className=\"text-lg font-light font-body\">{body}</p>\n                </div>\n              </Link>\n            ))}\n          </div>\n        </div>\n      </section>\n      <UpcomingProgramsSection\n        programs={\n          (data as { allMarkdownRemark: { nodes: Array<Program> } })\n            .allMarkdownRemark.nodes\n        }\n      />\n      <section id=\"workshops\" className=\"px-8 bg-icterine py-28\">\n        <div className=\"max-w-5xl mx-auto\">\n          <h2 className=\"mb-4 text-4xl font-bold text-center text-iris font-body\">\n            Workshops\n          </h2>\n          <p className=\"mb-6 text-lg font-light font-body\">\n            Coding is telling the computer what to do. We run coding workshops\n            that teach the basics with live coding, troubleshooting sessions,\n            and videos.\n          </p>\n          <div className=\"grid gap-10 align-top md:grid-cols-8\">\n            <div className=\"self-start w-full col-span-3 bg-white shadow-black \">\n              <StaticImage\n                className=\"h-full\"\n                src=\"../assets/programs-beginner-coding-camp.png\"\n                alt=\"Rotman Coding Challenge Flyer\"\n              />\n            </div>\n            <div className=\"col-span-5\">\n              <h3 className=\"flex flex-wrap items-center text-2xl font-bold gap-x-4 font-body\">\n                Virtual Beginner Coding Camp\n                <Tag key={\"2\"} tag={\"🔔 Upcoming Event\"}/>\n                <Tag key={\"1\"} tag={\"💻 Workshop\"} />\n              </h3>\n              <p className=\"font-light my-3\">\n                Learn the basics of coding through videos, live-coding sessions, collaboration, and daily office hours.\n              </p>\n              <div className=\"font-bold\">Important Dates:</div>\n              <ul className=\"mb-4 list-disc list-inside\">\n                <li>Applications Open: February 2nd, 2022</li>\n                <li>Application Deadline: March 6th, 2022</li>\n              </ul>\n              <Link to=\"/programs/beginner-coding-camp\">\n                <IrisLinkButton>Learn more</IrisLinkButton>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </section>\n      <section id=\"mentorship-program\" className=\"px-8 mb-10 pt-28\">\n        <div className=\"grid max-w-5xl gap-10 mx-auto md:grid-cols-2\">\n          <div className=\"flex flex-col\">\n            <img\n              src={colorChangingPongGif}\n              alt=\"Gif of a project made by campers. It is an adaptation of pong where the ball changes colour when it is hit.\"\n            />\n            <caption className=\"mt-2 font-light text-center text-gray-400\">\n              Pong Game by Natalia, Selina, Arushna & Mari\n            </caption>\n          </div>\n          <div>\n            <h2 className=\"mb-4 text-4xl font-bold text-iris font-body\">\n              Mentorship Program\n            </h2>\n            <p className=\"mb-4 font-light\">\n              Building a project is not only one of the best ways to learn how\n              to code, but they are often showcased during job interviews. In\n              our Mentorship Program, we match you with a mentor who is either a\n              graduate student in computer science or a member of the tech\n              industry. They work with you and a small group of other campers to\n              build something pretty darn cool.\n            </p>\n            <div className=\"font-bold\"> Important Dates:</div>\n            <ul className=\"mb-4 list-disc list-inside\">\n              <li>Applications Open: March 2022 </li>\n              <li>Application Deadline: July 2022</li>\n            </ul>\n            <Link to=\"https://hercodecamp.us19.list-manage.com/subscribe?u=c27169d8995f9d493daf82c16&id=4169a6682f\">\n              <IrisLinkButton>Keep me in the loop</IrisLinkButton>\n            </Link>\n          </div>\n        </div>\n      </section>\n\n      <CamperSlideshowSection />\n      <section\n        id=\"byte-sized-series\"\n        className=\"px-8 bg-gray-800 text-gray-50 py-28\"\n      >\n        <div className=\"max-w-5xl mx-auto\">\n          <div className=\"text-center\">\n            <h2 className=\"mb-4 text-4xl font-bold text-white font-body\">\n              Byte-sized Series\n            </h2>\n            <p className=\"mb-6 text-lg font-light text-white font-body\">\n              In this series of events, we teach you important skills that are\n              not often taught in class in short 1-2 hour workshops. Join us to\n              learn!\n            </p>\n          </div>\n          <div className=\"grid grid-cols-1 gap-10 md:grid-cols-8\">\n            <div className=\"w-full h-full col-span-3 bg-white shadow-black\">\n              <StaticImage\n                src=\"../assets/programs-coder.JPG\"\n                alt=\"Coder's Camp Coding Workshop\"\n              />\n            </div>\n            <div className=\"col-span-5 font-body\">\n              <h3 className=\"flex flex-wrap items-center text-2xl font-bold font-body gap-x-4\">\n                How to start a coding project!\n                <span className=\"py-1 pl-3 pr-4 text-sm font-light text-white rounded-full bg-gradient-to-r from-darkIris to-iris\">\n                  <span className=\"mr-1\">📼</span> New video\n                </span>\n              </h3>\n\n              <p className=\"mb-8 font-light\">\n                Want to start a project but don’t know where to start? We\n                created a video with tips on how to get started!\n              </p>\n              <Link to=\"/programs/start-a-project\">\n                <IrisLinkButton>Learn more</IrisLinkButton>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </section>\n      <section\n        className=\"px-8 py-20 bg-radial-gradient-c from-icterine to-white\"\n        // style={{\n        //   backgroundImage:\n        //     \"radial-gradient(circle at 50% 50%, rgba(240,234,80,1) 0%, #FFFFFF 100%)\",\n        // }}\n      >\n        <div className=\"text-center\">\n          <h2 className=\"mb-4 font-mono text-3xl font-bold text-iris\">\n            Learn Now\n          </h2>\n          <p className=\"mb-12 text-lg font-light font-body\">\n            Can’t wait to learn? Learn now with the past program materials\n            below.\n          </p>\n          <div className=\"flex flex-wrap items-stretch justify-center gap-4\">\n            {(\n              data as { allMarkdownRemark: { nodes: Array<Program> } }\n            ).allMarkdownRemark.nodes\n              .filter(({ frontmatter: { date } }) => {\n                return (\n                  !date || parse(date, \"yyyy-MM-dd\", new Date()) < new Date()\n                )\n              })\n              .map(program => (\n                <ProgramCard {...program} />\n              ))}\n          </div>\n        </div>\n      </section>\n      <MailingListSection />\n      <Footer />\n    </Layout>\n  )\n}\n\nexport const UpcomingProgramsSection: React.FunctionComponent<{\n  programs: Array<Program>\n  withMore?: boolean\n}> = ({ programs, withMore = false }) => (\n  <section className=\"px-8 py-20 bg-radial-gradient-c from-icterine to-white\">\n    <div className=\"text-center\">\n      <h2 className=\"mb-4 font-mono text-3xl font-bold\">Upcoming Programs</h2>\n      <p className=\"mb-12 text-lg font-light font-body\">\n        For beginners with little to no coding experience. Oh, and they’re all\n        free.\n      </p>\n      <div className=\"grid items-stretch justify-center gap-4 lg:flex lg:flex-wrap\">\n        {programs\n          .filter(({ frontmatter: { date } }) => {\n            console.log(date)\n            return date && parse(date, \"yyyy-MM-dd\", new Date())\n          })\n          .map(program => (\n            <ProgramCard key={program.frontmatter.title} {...program} />\n          ))}\n      </div>\n      {withMore ? (\n        <div className=\"mt-10 text-lg font-bold uppercase font-body text-iris\">\n          <Link to=\"/programs\" className=\"hover:underline hover:text-black\">\n            More {\">\"}\n          </Link>\n        </div>\n      ) : null}\n    </div>\n  </section>\n)\n\nexport interface Program {\n  frontmatter: {\n    title?: string\n    blurb?: string\n    creators?: Array<string>\n    tags?: Array<string>\n    date?: string\n    slug?: string\n    app_link?: string\n  }\n  html: string\n}\n\nconst ProgramCard: React.FunctionComponent<Program> = ({\n  frontmatter: { title, date, blurb, slug, tags, app_link },\n}) => {\n  // TODO: there is a bit of an edge case here, it is upcomong if it hasn't happened but idk what happens if applications are closed? or what time the event happens at.\n\n  const parsedDate = date ? parse(date, \"yyyy-MM-dd\", new Date()) : null //parse(date, \"yyyy-MM-dd\", new Date())\n  return (\n    <Link to={`/programs/${slug}`}>\n      <div className=\"max-w-sm p-5 text-left bg-white border border-black font-body hover:shadow-black hover:bg-gray-100 hover:drop-shadow-xl hover:!text-black h-full flex-col flex\">\n        {tags ? (\n          <div className=\"flex gap-2 mb-2\">\n            {tags.map(tag => (\n              <Tag key={tag} tag={tag} />\n            ))}\n          </div>\n        ) : null}\n        <div className=\"font-medium\">{title}</div>\n        {parsedDate ? <div>{format(parsedDate, \"MMMM do, yyyy\")}</div> : null}\n        <p className=\"mb-5 font-light\">{blurb}</p>\n        {app_link ? (\n          <div className=\"mt-auto text-xs text-left\">\n            <Link to={`/programs/${slug}`}>Read more {\">\"}</Link>\n          </div>\n        ) : null}\n      </div>\n    </Link>\n  )\n}\n\nexport const Tag: React.FunctionComponent<{ tag: string }> = ({ tag }) => {\n  let tokens = tag.split(\" \")\n  let firstTokenEmoji = /\\p{Extended_Pictographic}/u.test(tokens[0])\n  // This is a nested ternary so that tailwind won't purge our colours out.\n  return (\n    <span\n      className={`${\n        tag === \"💻 Workshop\"\n          ? \"bg-red-600\"\n          : tag === \"🔨 Project\"\n          ? \"bg-blue-600 \"\n          : tag === \"🧩 Byte-sized Series\"\n          ? \"bg-green-600\"\n          : tag === \"🔔 Upcoming Event\" \n          ? \"bg-iris\"\n          : \"\"\n      } font-mono text-white text-xs px-2 py-1 rounded-full font-extralight`}\n    >\n      {firstTokenEmoji ? (\n        <>\n          <span className=\"mr-2\">{tokens[0]}</span>\n          {tokens.slice(1).join(\" \")}\n        </>\n      ) : (\n        tag\n      )}\n    </span>\n  )\n}\n\nexport default ProgramsPage\n\nexport const pageQuery = graphql`\n  query AllPrograms {\n    allMarkdownRemark {\n      nodes {\n        frontmatter {\n          title\n          tags\n          blurb\n          date(formatString: \"yyyy-MM-DD\")\n          slug\n          app_link\n        }\n      }\n    }\n  }\n`\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n","/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nmodule.exports = asciiWords;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = basePropertyOf;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","var arrayReduce = require('./_arrayReduce'),\n    deburr = require('./deburr'),\n    words = require('./words');\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\";\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;\n","var basePropertyOf = require('./_basePropertyOf');\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 's'\n};\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\nmodule.exports = deburrLetter;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n  rsUpper + '+' + rsOptContrUpper,\n  rsOrdUpper,\n  rsOrdLower,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nmodule.exports = unicodeWords;\n","var deburrLetter = require('./_deburrLetter'),\n    toString = require('./toString');\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\n\n/** Used to compose unicode capture groups. */\nvar rsCombo = '[' + rsComboRange + ']';\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nmodule.exports = deburr;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;\n"],"names":["CampersSlideshow","children","interval","useState","currentSlide","setCurrentSlide","maxLength","Array","isArray","length","useEffect","intervalId","setInterval","clearInterval","Error","className","map","_","i","key","onClick","gif","pongGif","title","event","description","spongeBobGif","spaceInvadersGif","src","alt","IcterineLinkButton","IrisLinkButton","TransparentLinkButton","MailingListSection","Link","to","data","id","S","testimonial","name","UpcomingProgramsSection","withMore","programs","allMarkdownRemark","nodes","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","token","count","options","result","tokenValue","replace","toString","addSuffix","comparison","buildFormatLongFn","args","arguments","undefined","width","String","defaultWidth","format","formats","date","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","_date","_baseDate","_options","buildLocalizeFn","dirtyIndex","dirtyOptions","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","ordinalNumber","dirtyNumber","number","Number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","value","matchedString","parsePatterns","defaultParseWidth","findIndex","pattern","test","findKey","valueCallback","rest","slice","object","predicate","hasOwnProperty","array","parsePattern","parseInt","parseResult","any","index","code","formatDistance","formatLong","formatRelative","localize","weekStartsOn","firstWeekContainsDate","toInteger","NaN","isNaN","Math","ceil","floor","requiredArgs","required","TypeError","toDate","argument","argStr","Object","prototype","call","Date","getTime","console","warn","stack","addMilliseconds","dirtyDate","dirtyAmount","timestamp","amount","subMilliseconds","target","dirtyObject","property","dateLongFormatter","timeLongFormatter","longFormatters","p","P","dateTimeFormat","datePattern","timePattern","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","indexOf","isProtectedWeekYearToken","throwProtectedError","input","RangeError","concat","startOfUTCWeek","locale","localeWeekStartsOn","defaultWeekStartsOn","getUTCDay","diff","setUTCDate","getUTCDate","setUTCHours","getUTCWeekYear","year","getUTCFullYear","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","startOfNextYear","firstWeekOfThisYear","startOfThisYear","setUTCDay","dirtyDay","currentDay","remainder","dayIndex","startOfUTCISOWeek","getUTCISOWeekYear","fourthOfJanuaryOfNextYear","fourthOfJanuaryOfThisYear","startOfUTCISOWeekYear","fourthOfJanuary","MILLISECONDS_IN_WEEK","getUTCISOWeek","round","startOfUTCWeekYear","firstWeek","getUTCWeek","numericPatterns","timezonePatterns","parseNumericPattern","parseTimezonePattern","parseAnyDigitsSigned","parseNDigits","n","RegExp","parseNDigitsSigned","dayPeriodEnumToHours","enumValue","normalizeTwoDigitYear","twoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","isLeapYearIndex","parsers","G","priority","parse","set","flags","incompatibleTokens","y","isTwoDigitYear","unit","validate","normalizedTwoDigitYear","Y","R","_match","_flags","firstWeekOfYear","u","Q","setUTCMonth","q","M","L","w","dirtyWeek","week","setUTCWeek","I","dirtyISOWeek","isoWeek","setUTCISOWeek","d","subPriority","isLeapYear","getUTCMonth","D","E","e","wholeWeekDays","c","setUTCISODay","a","b","B","h","isPM","getUTCHours","H","K","k","hours","m","setUTCMinutes","s","setUTCSeconds","pow","setUTCMilliseconds","X","timestampIsSet","x","t","_token","T","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","notWhitespaceRegExp","unescapedLatinCharacterRegExp","dirtyDateString","dirtyFormatString","dirtyReferenceDate","dateString","formatString","subFnOptions","setters","dateToSystemTimezone","tokens","substring","firstCharacter","longFormatter","join","usedTokens","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","parser","incompatibleToken","_i","usedToken","fullToken","push","cleanEscapedString","uniquePrioritySetters","setter","sort","filter","setterArray","convertedDate","setFullYear","setHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","isDate","isValid","addLeadingZeros","targetLength","sign","output","abs","signedYear","dayPeriodEnumValue","toUpperCase","numberOfDigits","milliseconds","MILLISECONDS_IN_DAY","dayPeriodEnum","lightFormatters","signedWeekYear","weekYear","dayOfYear","startOfYearTimestamp","difference","getUTCDayOfYear","dayOfWeek","localDayOfWeek","isoDayOfWeek","toLowerCase","_localize","timezoneOffset","_originalDate","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","O","formatTimezoneShort","z","originalDate","offset","dirtyDelimiter","absOffset","minutes","delimiter","frontmatter","log","program","ProgramCard","blurb","slug","tags","app_link","parsedDate","tag","Tag","dirtyFormatStr","formatStr","formatterOptions","formatter","split","firstTokenEmoji","Helmet","icon","body","colorChangingPongGif","CamperSlideshow","Symbol","module","exports","iteratee","accumulator","initAccum","reAsciiWord","getRawTag","objectToString","symToStringTag","toStringTag","arrayMap","isSymbol","symbolProto","symbolToString","baseToString","arrayReduce","deburr","words","reApos","callback","deburrLetter","basePropertyOf","freeGlobal","g","objectProto","nativeObjectToString","isOwn","unmasked","reHasUnicodeWord","freeSelf","self","root","Function","rsDingbatRange","rsLowerRange","rsUpperRange","rsBreakRange","rsMathOpRange","rsBreak","rsDigits","rsDingbat","rsLower","rsMisc","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","reOptMod","rsModifier","rsOptVar","rsSeq","rsEmoji","reUnicodeWord","reLatin","reComboMark","baseGetTag","isObjectLike","kebabCase","createCompounder","word","asciiWords","hasUnicodeWord","unicodeWords","guard"],"sourceRoot":""}